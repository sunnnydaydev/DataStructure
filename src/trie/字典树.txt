trie 字典树：又叫前缀树

介绍：是一个多叉树。


比较：如果有n个条目 使用树结构查询，时间复杂度为O（logn），
      使用字典树时，查询的时间复杂度与条目个数无关。其时间复杂度为O(w)，w为字符串的长度。
      大多数英语单词的长度都小于10，所以字典树也有特殊的用处。

 要求：从根节点开始，到叶子节点结束。经过的路径就是一个英语单词。

 简单设计：每个节点有26（英文单词字母有26个）个指向下一节点的指针。这是最简单的设计。没考虑大小写。
        有时存网址时，特殊字符也要设计，就不止26个了。

        class{
          char c;
          Node next[26]; // 一般不会设计死26 个 而是动态设计使用映射。
        }

设计：每个节点有若干个个指向下一节点的指针。

       class{
          boolean isWord;// 是否为单词结尾
          Map<Character,Node> next;
        }


 存储单词：效率对比。

 trie与前缀搜索：每个单词的前n个字母都可看成前缀。

 d